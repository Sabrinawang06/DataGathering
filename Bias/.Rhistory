shiny::runApp()
runApp()
plot(x = -3:3)
plot(x = -3:3, type = "n")
plot(x = -3:3, type = "n", xlab = "Bias", ylab = "")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?function
plotTarget <- funtion(x, y){
#Get image
isolate(ima <- readPNG("t6.png"))
#Set up the plot area
isolate(plot(x=-5:5,ylim=c(-5,5),xlim=c(-5,5),type='p',xlab = ''))
#Get the plot information so the image will fill the plot box, and draw it
isolate(lim <- par())
isolate(rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4]))
isolate(grid())
lines(x,y, xlim = c(-5,5), ylim = c(-5,5),type = 'p', pch = 20)
}
?funtion
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a = c(1,2,3)
b = c(1,2,3)
c = matrix(a,b)
c
c = matrix(a,b, nrow = 2)
c = matrix(a,b)
c
c = matrix(c(a,b)
c
c = matrix(c(a,b))
c
d = rbind(a,b)
d
dist(d)
a = c(1,1)
b = c(2,2)
c = c(3,3)
d = rbind(a,b,c)
d
dist(d)
class(d)
d
mean(d)
a = c(1,2,3,4,5)
b = c(6,3,9,1,2)
c = rbind(a,b)
c
mean(c)
a = c(1,1)
b = c(2,2)
c = c(3,3)
d = rbind(a,b,c)
d
e = dist(d)
f = mean(e)
f
1.414214+2.828427+1.414214
5.656855/3
?rbind
a = c(1,2,3)
b = c(1,2,3)
c = cbind(a,b)
c
runApp()
?density
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?abline
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/yuxin/Downloads/BOAST/ShinyApps/BOAST-DataGathering/target3density')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/yuxin/Downloads/BOAST/ShinyApps/clustering')
runApp('C:/Users/yuxin/Downloads/BOAST/ShinyApps/clustering')
runApp()
runApp()
runApp()
?bsButton
??bsbutton
runApp()
?updateButton
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?bsButton
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?observeEvent
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
,?observe
?observe
?observeEvent
runApp()
runApp()
runApp()
runApp()
?updateButton
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?plot
runApp()
?round
runApp()
runApp()
?bsButton
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
?wellPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?bsPopover
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
sample(1:4,1)
sample(1:4,1)
sample(1:4,1)
sample(1:4,1, replace = FALSE)
sample(1:4,1, replace = FALSE)
sample(1:4,1, replace = FALSE)
sample(1:4,1, replace = FALSE)
sample(1:4,1, replace = FALSE)
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
scan(soi.dat)
shiny::runApp()
shiny::runApp()
install.packages(grid)
install.packages('grid')
install.packages(RUnit)
install.packages('RUnit')
shiny::runApp('C:/Users/llfsh/Desktop/C1_Data Gathering/variableTypes')
runApp('C:/Users/llfsh/Desktop/C1_Data Gathering/variableTypes')
